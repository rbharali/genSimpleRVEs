% Clear existing data from the MATLAB workspace
close all; clear all; clc

% Start timer
tic

%%%%%%%% Begin USER INPUT %%%%%%%%
% Read data generated by rvegen2.m
t     = readtable('masterRVE.txt');
mEdge = 200;
% Number of random RVEs and edge length
RVE.nRVE   = 10;
RVE.edge   = 40;
plotMaster = 1;  % 0 = no, 1 = yes
imagMaster = 1;  % 0 = no, 1 = yes (requires plotMaster = 1)
plotRVEs   = 1;  % 0 = no, 1 = yes
imagRVEs   = 1;  % 0 = no, 1 = yes (requires plotRVEs = 1)
writeRVEs  = 1;  % 0 = no, 1 = yes
outputFldr = './RVEdata';
%%%%%%%% End USER INPUT %%%%%%%%


if ~exist(outputFldr, 'dir')
mkdir(outputFldr)
end

% Plot master RVE with cicular inclusions
if plotMaster == 1
figure(1)
xlim([-mEdge/2 mEdge/2]);
ylim([-mEdge/2 mEdge/2]);
rectangle('Position',[-mEdge/2 -mEdge/2 mEdge mEdge]);
hold on;
for i = 1:length(t.radii_mod)
    viscircles([t.centers_mod_1(i), t.centers_mod_2(i)],t.radii_mod(i));
end
end

% Generate bottom left corner of RVEs in random fashion
RVE.c_x = -mEdge/2+RVE.edge + (mEdge-2*RVE.edge).*rand(RVE.nRVE,1);
RVE.c_y = -mEdge/2+RVE.edge + (mEdge-2*RVE.edge).*rand(RVE.nRVE,1);

% Plot the generated RVEs in the master RVE
if plotMaster == 1
for l = 1:RVE.nRVE
xv = [RVE.c_x(l)  RVE.c_x(l)+RVE.edge RVE.c_x(l)+RVE.edge RVE.c_x(l)      RVE.c_x(l) ];
yv = [RVE.c_y(l)  RVE.c_y(l)          RVE.c_y(l)+RVE.edge RVE.c_y(l)+RVE.edge RVE.c_y(l) ];
plot(xv,yv,'LineWidth',2)
text((2*RVE.c_x(l)+RVE.edge)/2,(2*RVE.c_y(l)+RVE.edge)/2,num2str(l),'FontSize',12)
end
hold off;
end

if imagMaster == 1 && plotMaster == 1
filename = ['masterRVE_RVEs',num2str(RVE.edge),'size'];
saveas(gcf,fullfile(outputFldr, filename),'bmp')
end

% Allocate variable for smaller RVEs
xv = zeros(RVE.nRVE,5);
yv = zeros(RVE.nRVE,5);

% Allocate (boolean) variable to record inclusions in the RVE
in = zeros(RVE.nRVE,length(t.radii_mod));

for i = 1:RVE.nRVE
    % Find index of inclusions in the RVE(i) with all edges increase by 2
    xv(i,:) = [RVE.c_x(i)-1  RVE.c_x(i)+RVE.edge+1 RVE.c_x(i)+RVE.edge+1 RVE.c_x(i)-1   RVE.c_x(i)-1 ];
    yv(i,:) = [RVE.c_y(i)-1  RVE.c_y(i)-1      RVE.c_y(i)+RVE.edge+1 RVE.c_y(i)+RVE.edge+1 RVE.c_y(i)-1 ];
    in(i,:) = inpolygon(t.centers_mod_1,t.centers_mod_2,xv(i,:),yv(i,:));
    RVE_idx = find(in(i,:));
    
    % Allocate variable and store inclusion data associated with RVE(i)
    RVE.incl_center= zeros(length(RVE_idx),2);
    RVE.incl_radii = zeros(length(RVE_idx),1);
    for j = 1:length(RVE_idx)
        RVE.incl_center(j,1) = t.centers_mod_1(RVE_idx(j)) - (RVE.c_x(i)-1);
        RVE.incl_center(j,2) = t.centers_mod_2(RVE_idx(j)) - (RVE.c_y(i)-1);
        RVE.incl_radii(j)    = t.radii_mod(RVE_idx(j));
    end
    
    % Save RVE data to file
    if writeRVEs == 1
    varNames = {'center','radii'};
    RVE.data = table([RVE.incl_center(:,1) RVE.incl_center(:,2)], ...
                      RVE.incl_radii,'VariableNames',varNames);
    filename = ['RVE',num2str(RVE.edge),'x',num2str(RVE.edge),'-',num2str(i),'.txt'];
    writetable(RVE.data,fullfile(outputFldr, filename), 'Delimiter','\t');
    end
    
    % Plot the smallers RVEs with inclusions
    if plotRVEs == 1
    figure(i+1)
    title(['RVE',num2str(i)])
    xlim([0 RVE.edge+2]);
    ylim([0 RVE.edge+2]);
    rectangle('Position',[0 0 RVE.edge+2 RVE.edge+2]);
    hold on;
    rectangle('Position',[1 1 RVE.edge RVE.edge],'EdgeColor','b');
    for k = 1:length(RVE_idx)
        viscircles(RVE.incl_center(k,:),RVE.incl_radii(k));
    end
    
    if imagRVEs == 1
    filename = ['RVE',num2str(RVE.edge),'x',num2str(RVE.edge),'-',num2str(i)];
    saveas(gcf,fullfile(outputFldr, filename),'bmp')
    end
    
    end
end

%On-screen positioning of the figures for a better view!
if plotMaster == 1
    movegui(figure(1),'northwest');
end
if plotRVEs == 1 && RVE.nRVE == 5
movegui(figure(2),'north');
movegui(figure(3),'northeast');
movegui(figure(4),'southwest');
movegui(figure(5),'south');
movegui(figure(6),'southeast');
end

clear i j k l in filename RVE_idx varnames xv yv;

% Stop timer
toc

disp(['Output files have been written to ',outputFldr])